input_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-> into a matrix
rownames(input_data) <- rnames
============================
apply phyper to matrix
============================
#use apply function to iterate over every line in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197))
==================
#load data file as matrix
==================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
input_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-> into a matrix
rownames(input_data) <- rnames
============================
#apply phyper to matrix
============================
#use apply function to iterate over every line in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197))
View(data)
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
input_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, phyper(x) (x[1], x[2], (8857-x[2]), 1197)
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
input_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, phyper(x) (x[1], x[2], (8857-x[2]), 1197))
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
input_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197))
phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
View(input_data)
dim(data)
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
phyper(3, 8, 8849, 1197)
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197)) #second argument = 1 to loop over rows, 2 for columns
x = phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
write(x, file = "hypergeo_nuc_cyto_output.csv",
ncolumns = if(is.character(x)) 1 else 5,
append = FALSE, sep = " ")
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197)) #second argument = 1 to loop over rows, 2 for columns
x = phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
write(x, file = "hypergeo_nuc_cyto_output.csv",
sep = "\n")
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197)) #second argument = 1 to loop over rows, 2 for columns
x = phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
write.csv(x, file = "hypergeo_nuc_cyto_output.csv",
sep = "\n")
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
x = apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197)) #second argument = 1 to loop over rows, 2 for columns
x = phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
write.csv(x, file = "hypergeo_nuc_cyto_output.csv")
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
x = apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
write.csv(x, file = "hypergeo_nuc_cyto_output.csv")
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8857-x[2]), 1197)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8857-input_data[1,2]), 1197)
write.csv(x, file = "hypergeo_nuc_cyto_output.csv")
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 792)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 792)
write.csv(x, file = "hypergeo_nuc_cyto_output.csv")
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 792)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 792)
write.csv(p_value, file = "hypergeo_nuc_cyto_output.csv")
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q vector of quantiles representing the number of white balls drawn
#without replacement from an urn which contains both black and white
#balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 792)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 792)
write.csv(p_value, file = "hypergeo_nuc_cyto_output.csv")
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q vector of quantiles representing the number of white balls drawn
#without replacement from an urn which contains both black and white
#balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_nuc_no_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 792)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 792)
write.csv(p_value, file = "hypergeo_nuc_no_cyto_output.csv")
View(input_data)
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q vector of quantiles representing the number of white balls drawn
#without replacement from an urn which contains both black and white
#balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_nuc_no_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 2768)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 2768)
write.csv(p_value, file = "hypergeo_nuc_no_cyto_output.csv")
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q vector of quantiles representing the number of white balls drawn
#without replacement from an urn which contains both black and white
#balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_cyto_no_nuc_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#NOTE: must change file name for different data sets
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 1675)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 2768)
write.csv(p_value, file = "hypergeo_cyto_no_nuc_output.csv")
#NOTE: must change file name and k value for different datasets
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q vector of quantiles representing the number of white balls drawn
#without replacement from an urn which contains both black and white
#balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_cyto_no_nuc_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#NOTE: must change file name for different data sets
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 1675)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[5,1], input_data[5,2], (8745-input_data[1,2]), 2768)
write.csv(p_value, file = "hypergeo_cyto_no_nuc_output.csv")
#NOTE: must change file name and k value for different datasets
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q vector of quantiles representing the number of white balls drawn
#without replacement from an urn which contains both black and white
#balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_cyto_no_nuc_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#NOTE: must change file name for different data sets
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 1675)) #second argument = 1 to loop over rows, 2 for columns
phyper(input_data[5,1], input_data[5,2], (8745-input_data[5,2]), 1675)
write.csv(p_value, file = "hypergeo_cyto_no_nuc_output.csv")
#NOTE: must change file name and k value for different datasets
phyper(2, 2, (8745-2), 1675)
phyper(2, 3, (8745-3), 1675)
phyper(3, 3, (8745-3), 1675)
phyper(4, 3, (8745-3), 1675)
phyper(3, 3, (8745-3), 1675)
phyper(3, 4, (8745-3), 1675)
phyper(3, 4, (8745-4), 1675)
phyper(4, 4, (8745-4), 1675)
phyper(10, 50, (8745-50), 1675)
phyper(1, 1000, (8745-1000), 1675)
phyper(35,240000,360000, 100)
phyper(1, 1000, 7745, 1675)
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 1675, lower.tail=FALSE) #test the 5th entry
print(input_data[1,1])
print(input_data[1,2])
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 1675, lower.tail=FALSE) #test the 5th entry
phyper(3, 3, (8745-3), 1675)
phyper(2, 3, (8745-3), 1675)
1-phyper(2, 3, (8745-3), 1675)
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q the number of white balls drawn without replacement from an urn which contains both black and white balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_cyto_no_nuc_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#NOTE: must change file name for different data sets
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 1675, lower.tail=FALSE)) #second argument = 1 to loop over rows, 2 for columns
write.csv(p_value, file = "hypergeo_cyto_no_nuc_output.csv")
#NOTE: must change file name and k value for different datasets
print(input_data[1,1])
print(input_data[1,2])
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 1675, lower.tail=FALSE) #test the 5th entry
#lower.tail = FALSE gives probablility of picking this amount or greater by chance. same as 1-p
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q the number of white balls drawn without replacement from an urn which contains both black and white balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_nuc_no_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#NOTE: must change file name for different data sets
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 2768, lower.tail=FALSE))
#second argument = 1 to loop over rows, 2 for columns
#change K value to match dataset
#lower.tail = FALSE gives probablility of picking this amount or greater by chance. same as 1-p
write.csv(p_value, file = "hypergeo_nuc_no_cyto_output.csv")
#NOTE: must change file name and k value for different datasets
print(input_data[1,1])
print(input_data[1,2])
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 2768, lower.tail=FALSE) #test the 5th entry
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q the number of white balls drawn without replacement from an urn which contains both black and white balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_nuc_no_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#NOTE: must change file name for different data sets
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 2768, lower.tail=FALSE))
#second argument = 1 to loop over rows, 2 for columns
#change K value to match dataset
#lower.tail = FALSE gives probablility of picking this amount or greater by chance. same as 1-p
write.csv(p_value, file = "hypergeo_nuc_no_cyto_output.csv")
#NOTE: must change file name and k value for different datasets
print(input_data[1,1])
print(input_data[1,2])
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 2768, lower.tail=FALSE) #test the 5th entry
#hypergeometric test
#from: http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
#phyper(q, m, n, k, lower.tail = TRUE, log.p = FALSE)
#q the number of white balls drawn without replacement from an urn which contains both black and white balls.
#m the number of white balls in the urn.
#n the number of black balls in the urn.
#k the number of balls drawn from the urn.
#for my data:
#q = # of genes from chosen list (eg nuc_cyto) in pathway.
#m = # of genes in HPA background in pathway
#n = total # of genes assigned to kegg IDs in HPA background not in pathway (ie 8745-m)
#k = total # of genes assigned to kegg IDs in chosen list (cyto_no_nuc: 1675 , nuc_no_cyto: 2768  , nuc_cyto: 792)
#============================
#load data file as matrix
#============================
#made a dataframe with pathway and 2 data columns (q,m) in excel and saved as .csv:
data <- read.csv("hypergeo_nuc_cyto_input.csv", comment.char="#")
rnames <- data[,1]                # assign labels in column 1 to "rnames"
input_data <- data.matrix(data)  # transform column 2-> into a matrix
rownames(input_data) <- rnames
#NOTE: must change file name for different data sets
#============================
#apply phyper to matrix
#============================
#use apply function to iterate over every row in the matrix
#http://stackoverflow.com/questions/4236368/how-to-apply-a-function-to-every-row-of-a-matrix-or-a-data-frame-in-r
p_value = apply(input_data, 1, function(x) phyper(x[1], x[2], (8745-x[2]), 792, lower.tail=FALSE))
#second argument = 1 to loop over rows, 2 for columns
#change K value to match dataset
#lower.tail = FALSE gives probablility of picking this amount or greater by chance. same as 1-p
write.csv(p_value, file = "hypergeo_nuc_cyto_output.csv")
#NOTE: must change file name and k value for different datasets
print(input_data[1,1])
print(input_data[1,2])
phyper(input_data[1,1], input_data[1,2], (8745-input_data[1,2]), 2768, lower.tail=FALSE) #test the 5th entry
